Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/Phaser_Bank"
	IconNameKey = "Parts/Phaser_Bank_Icon"
	ID = "stafa.phaserbank_floor"
	EditorGroup = "Starfleet"
	DescriptionKey = "Parts/Phaser_Bank_Desc"
	Resources
	[
		[steel, 88]
		[coil2, 30]
		[coil2, 6]
	]
	CrewSpeedFactor = 1
	CrewCongestedSpeedFactor = .5	
	TypeCategories = [weapon, turret, uses_power, phaserbank, phaserbank_power]
	ReceivableBuffs : ^/0/ReceivableBuffs [CaptainsRoomBuff, Phaser]
	Size = [1, 6]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 5000
	InitialPenetrationResistance = 3
	PenetrationRectType = Normal
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 2
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		ReverseOperationLeft
		{
			Type = AreaBuffProvider
			BuffType = PhaserReverseOperation
			BuffArea = [-1, 0, 1, 5]
			OperationalToggle = IsOperational
			Criteria
			{
				Rot = 0
				Category = phaserbank_controller
			}
		}
		ReverseOperationRight
		{
			Type = AreaBuffProvider
			BuffType = PhaserReverseOperation
			BuffArea = [1, 0, 1, 5]
			OperationalToggle = IsOperational
			Criteria
			{
				Rot = 0
				Category = phaserbank_controller
			}
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 6000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			Location = [0.5, 3]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 6]
					}
					{
						File = "floor_33.png"
						Size = [1, 6]
					}
					{
						File = "floor_66.png"
						Size = [1, 6]
					}
				]
			}
			//OperationalLighting
			//{
			//	Layer = "lights_add"
			//	DamageLevels
			//	[
			//		{
			//			File = "lights.png"
			//			Size = [1, 6]
			//		}
			//	]
			//}
			//NonOperationalDoodad = &OperationalDoodad
			Walls
			{
				Layer = "walls"
				Offset = [0, 0]
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 6]
					}
					{
						File = "walls_33.png"
						Size = [1, 6]
					}
					{
						File = "walls_66.png"
						Size = [1, 6]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				Location = [1, 1]
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 6]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 6]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 6]
					}
				]
			}
		}

		Turret
		{
			Type = TurretWeapon
			Location = [.5, 3]
			Rotation = -90d// Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			//FireInterval = 2/30
			FireInterval = 2.0
			FiringArc = 360d
			RotateSpeed = 360d
			FireThresholdAngle = 1d
			AIFirepowerRating = 400
			FirePermissionToggle = FireModeToggle
			AutoTargetCrewSafetyDist = 8
			IgnoreSourceShipLowLOSChecks = true
			IgnoreJunkLOSChecks = true
			HoldTargetWhileFiring = 0.5
			Emitter = BeamEmitter

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = Turret
			Invert = true
		}

		BeamEmitter : &<../../../shots/phaser_beam_deck/phaser_beam_deck.rules>
		{
			Type = BeamEmitter
			Location = [0.45, 0]
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			OperationalToggle = IsOperational
			FireDelay = 0.5
			ResourceStorage = BatteryStorage
			ResourcesUsed = 500
			MinResourcesUsed = 1
		}

		ChargeEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = Turret
			Location = [.85975, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "charge.wav"
					Volume = .25
					Speed = 1.5
				}
			]
		}

		WeaponSprite
		{
			Type = Sprite
			//ChainedTo = Turret
			OperationalToggle = IsOperational
			Location = [0.5, 3]
			Rotation = 0d
			Layer = "roof_doodads"
			ResetAnimationTrigger = Turret
			AtlasSprite
			{
				AnimationFiles
				[
					"ani2/weapon01.png"
					"ani2/weapon02.png"
					"ani2/weapon03.png"
					"ani2/weapon04.png"
					"ani2/weapon05.png"
					"ani2/weapon06.png"
					"ani2/weapon07.png"
					"ani2/weapon08.png"
					"ani2/weapon09.png"
					"ani2/weapon10.png"
					"ani2/weapon10.png"
					"ani2/weapon10.png"
					"ani2/weapon10.png"
					"ani2/weapon10.png"
					"ani2/weapon11.png"
					"ani2/weapon11.png"
					//"ani/weapon12.png"
					//"ani/weapon13.png"
					//"ani/weapon14.png"
					//"ani/weapon15.png"
					//"ani/weapon16.png"
					//"ani/weapon17.png"
					//"ani/weapon18.png"
					//"ani/weapon19.png"
					//"ani/weapon20.png"
					//"ani/weapon21.png"
					//"ani/weapon22.png"
					//"ani/weapon23.png"
					//"ani/weapon24.png"
					//"ani/weapon25.png"
					//"ani/weapon26.png"
					//"ani/weapon27.png"
					//"ani/weapon28.png"
					//"ani/weapon29.png"
					//"ani/weapon30.png"
					//"ani/weapon31.png"
					//"ani/weapon32.png"
					//"ani/weapon33.png"
					//"ani/weapon34.png"
					//"ani/weapon35.png"
					//"ani/weapon36.png"
					//"ani/weapon37.png"
					//"ani/weapon38.png"
					//"ani/weapon39.png"
					//"ani/weapon40.png"
					//"ani/weapon41.png"
					//"ani/weapon42.png"
					//"ani/weapon43.png"
					//"ani/weapon44.png"
					//"ani/weapon45.png"
					//"ani/weapon46.png"
					//"ani/weapon47.png"
					//"ani/weapon48.png"
					//"ani/weapon49.png"
					//"ani/weapon50.png"
					//"ani/weapon51.png"
					//"ani/weapon52.png"
					//"ani/weapon53.png"
					//"ani/weapon54.png"
					//"ani/weapon55.png"
					//"ani/weapon56.png"
					//"ani/weapon57.png"
					//"ani/weapon58.png"
					//"ani/weapon59.png"
					//"ani/weapon60.png"
					//"ani/weapon61.png"
					//"ani/weapon62.png"
					//"ani/weapon63.png"
					//"ani/weapon64.png"
					//"ani/weapon65.png"
					//"ani/weapon66.png"
					//"ani/weapon67.png"
					//"ani/weapon68.png"
					//"ani/weapon69.png"
					//"ani/weapon70.png"
					//"ani/weapon71.png"
					//"ani/weapon72.png"
					//"ani/weapon73.png"
					//"ani/weapon74.png"
					//"ani/weapon75.png"
					//"ani/weapon76.png"
					//"ani/weapon77.png"
					//"ani/weapon78.png"
					"weaponX.png"
				]
				Size = [1, 6]
				AnimationInterval = 0.035
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}
		//TurretGraphics
		//{
		//	Type = Graphics
		//	ChainedTo = Turret
		//	Rotation = 90d
		//	OperationalToggle = IsOperational
		//	OperationalDoodad
		//	{
		//		Layer = "roof_turrets"
		//		DamageLevels
		//		[
		//			{
		//				File = "turret_on.png"
		//				NormalsFile = "turret_normals.png"
		//				Size = [2, 2]
		//				Offset = [0, -1/64]
		//			}
		//			{
		//				File = "turret_on_33.png"
		//				NormalsFile = "turret_normals.png"
		//				Size = [2, 2]
		//				Offset = [0, -1/64]
		//			}
		//			{
		//				File = "turret_on_66.png"
		//				NormalsFile = "turret_normals.png"
		//				Size = [1, 2]
		//				Offset = [0, -1/64]
		//			}
		//		]
		//	}
		//	NonOperationalDoodad
		//	{
		//		Layer = "roof_turrets"
		//		DamageLevels
		//		[
		//			{
		//				File = "turret_off.png"
		//				NormalsFile = "turret_normals.png"
		//				Size = [2, 2]
		//				Offset = [0, -1/64]
		//			}
		//			{
		//				File = "turret_off_33.png"
		//				NormalsFile = "turret_normals.png"
		//				Size = [2, 2]
		//				Offset = [0, -1/64]
		//			}
		//			{
		//				File = "turret_off_66.png"
		//				NormalsFile = "turret_normals.png"
		//				Size = [1, 2]
		//				Offset = [0, -1/64]
		//			}
		//		]
		//	}
		//}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 1]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyed
			Location = [.5, 3]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, 3]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [.5, .5]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					Delay = &~/Part/Components/Turret/FireInterval
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [.5, .5]
					}
				}
				
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 6]
		}
	}

	Stats
	{
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
		MinPower = (&../StatsByCategory/0/Stats/PowerUsageContinuous) / 2
		RecPower = &../StatsByCategory/0/Stats/PowerUsageContinuous
		RecCrew = (&RecPower) * 4
	}


	StatsByCategory
	[
		{
			NameKey = "StatCategories/PDShot"
			Stats
			{
				ShotDamagePerShot = (&~/Part/Components/BeamEmitter/HitOperational/HitEffects/0/Damage) * ((&~/Part/Components/BeamEmitter/Duration)/(&~/Part/Components/BeamEmitter/HitInterval))
				ShotDamagePerSecond = (&ShotDamagePerShot) * (&ROF)
				ShotDamage = [&../ShotDamagePerShot, &../ShotDamagePerSecond]
				DamagePerShot = &~/Part/Components/BeamEmitter/HitOperational/HitEffects/0/Damage
				HitInterval = &~/Part/Components/BeamEmitter/HitInterval
				BurstDuration = &~/Part/Components/BeamEmitter/Duration
				BurstDamage = (&DamagePerShot) * ((&BurstDuration) / (&HitInterval))
				ROF = 1 / (&~/Part/Components/Turret/FireInterval)
				DamagePerSecond = (&BurstDamage) * (&ROF)
				Damage = [&../BurstDamage, &../DamagePerSecond]
				RangeLimited = [&~/Part/Components/BeamEmitter/Range/BaseValue, &~/Part/Components/BeamEmitter/Range/MaxValue]
				Arc = deg(&~/Part/Components/Turret/FiringArc)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				ShotSpeed = Infinity
				PowerPerShot = (&~/Part/Components/BeamEmitter/ResourcesUsed) / 1000
				PowerUsageContinuous = (&PowerPerShot) / (&~/Part/Components/Turret/FireInterval)
			}
		}
	]
}